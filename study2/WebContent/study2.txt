계층화 아키텍처


1. Presentation : view (jsp, mustache, tymeleaf)
	- 화면		
	- JSP, mustache, tymeleaf는 템플릿 엔진 : HTML 만드는 도구
	 
2. Controller layer : Controller
	요청처리, 흐름제어 등등
	(지금은 .jsp로 직접 요청하지만, 나중에는 jsp화면이 보이기전에 여러가지 작업을 한 다음 jsp화면으로 이동)
	- Excpetion 처리
	
3. 	Business Layer : Sevice
	- 비즈니스 로직, Transaction
	
4. persistence(영속성) Layer : DAO
	- DB접근, 오로지 ID접근

5. Domain lsyer/ : VO, DTO)
	- DB에서 얻은 객체
	=--------------------------------------------------------------------------------
효율성 :(중요 X):		시간 (
					공간(JVM의 메모리 : 삼성이 있을 잘해서 + gc


유지보수(+확장)
-변경에 유연하다. (변경사항이 있을 때 코드를 얼마나 바꿔야 하나???)
----------------------------------

최종목표 : JSP에서 자바 소스코드 안보여야(99%)....

Exception 처리

member : free는 비밀번호를 안바꿈. 글쓴 사람 확인용
member는 비밀번호도 그냥 update 하면 된다.
id 중복체크
- id를 사용자가 입력해요. 근데 id는 PK
- DB에 해당 id가 있는지 확인해요.
 있으면 throw new BizDuplicateKeyException 없으면 그냥 insert
 
2. Exception 꼭 적절히 처리해주세요.
	getMember 했는데 DB에 없다 => BizNotFoundException
	update 쿼리 실행했는데 cnt가 0이다 => BizNotEffectedExcpetion
	
Member 기기	 






























